<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="1" total="12" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="My Test Suite" duration-ms="86" started-at="2016-04-16T18:44:58Z" finished-at="2016-04-16T18:44:59Z">
    <groups>
      <group name="Acceptance">
        <method signature="Bank1.BillPayment()[pri:0, instance:Bank.Bank1@6bf551]" name="BillPayment" class="Bank.Bank1"/>
        <method signature="Bank1.ApplyCC()[pri:0, instance:Bank.Bank1@6bf551]" name="ApplyCC" class="Bank.Bank1"/>
      </group> <!-- Acceptance -->
      <group name="Regression">
        <method signature="Bank1.ApplyCC()[pri:0, instance:Bank.Bank1@6bf551]" name="ApplyCC" class="Bank.Bank1"/>
        <method signature="Bank1.StdGen()[pri:0, instance:Bank.Bank1@6bf551]" name="StdGen" class="Bank.Bank1"/>
        <method signature="Bank1.MoneyTransfer()[pri:0, instance:Bank.Bank1@6bf551]" name="MoneyTransfer" class="Bank.Bank1"/>
      </group> <!-- Regression -->
    </groups>
    <test name="Mod1" duration-ms="30" started-at="2016-04-16T18:44:58Z" finished-at="2016-04-16T18:44:58Z">
      <class name="Bank.Bank1">
        <test-method status="PASS" signature="connectDB()[pri:0, instance:Bank.Bank1@6bf551]" name="connectDB" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connectDB -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:Bank.Bank1@6bf551]" name="openBrowser" is-config="true" duration-ms="1" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="Login()[pri:0, instance:Bank.Bank1@6bf551]" name="Login" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="MoneyTransfer()[pri:0, instance:Bank.Bank1@6bf551]" name="MoneyTransfer" duration-ms="1" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MoneyTransfer -->
        <test-method status="PASS" signature="Logout()[pri:0, instance:Bank.Bank1@6bf551]" name="Logout" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method status="PASS" signature="Login()[pri:0, instance:Bank.Bank1@6bf551]" name="Login" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="FAIL" signature="BillPayment()[pri:0, instance:Bank.Bank1@6bf551]" name="BillPayment" duration-ms="3" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[expected:<4> but was:<5>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: expected:<4> but was:<5>
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at junit.framework.Assert.assertEquals(Assert.java:201)
	at junit.framework.Assert.assertEquals(Assert.java:207)
	at Bank.Bank1.BillPayment(Bank1.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BillPayment -->
        <test-method status="PASS" signature="Logout()[pri:0, instance:Bank.Bank1@6bf551]" name="Logout" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method status="PASS" signature="StdGen()[pri:0, instance:Bank.Bank1@6bf551]" name="StdGen" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StdGen -->
        <test-method status="PASS" signature="Logout()[pri:0, instance:Bank.Bank1@6bf551]" name="Logout" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method status="PASS" signature="Login()[pri:0, instance:Bank.Bank1@6bf551]" name="Login" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="SKIP" signature="ApplyCC()[pri:0, instance:Bank.Bank1@6bf551]" name="ApplyCC" duration-ms="3" started-at="2016-04-17T00:14:58Z" depends-on-methods="Bank.Bank1.BillPayment" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplyCC -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Bank.Bank1@6bf551]" name="CloseBrowser" is-config="true" duration-ms="4" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="DisconnectDB()[pri:0, instance:Bank.Bank1@6bf551]" name="DisconnectDB" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DisconnectDB -->
      </class> <!-- Bank.Bank1 -->
      <class name="Bank.Bank4">
        <test-method status="PASS" signature="PayTax()[pri:0, instance:Bank.Bank4@1718057]" name="PayTax" duration-ms="4" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PayTax -->
        <test-method status="PASS" signature="ITReturn()[pri:0, instance:Bank.Bank4@1718057]" name="ITReturn" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ITReturn -->
      </class> <!-- Bank.Bank4 -->
    </test> <!-- Mod1 -->
    <test name="Mod2" duration-ms="4" started-at="2016-04-16T18:44:59Z" finished-at="2016-04-16T18:44:59Z">
      <class name="Bank.Bank1">
        <test-method status="PASS" signature="OpenSel()[pri:0, instance:Bank.Bank1@6bf551]" name="OpenSel" is-config="true" duration-ms="43" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenSel -->
        <test-method status="PASS" signature="OpenSel()[pri:0, instance:Bank.Bank2@1b277f0]" name="OpenSel" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:58Z" finished-at="2016-04-17T00:14:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenSel -->
        <test-method status="SKIP" signature="CloseSel()[pri:0, instance:Bank.Bank2@1b277f0]" name="CloseSel" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:59Z" finished-at="2016-04-17T00:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseSel -->
        <test-method status="PASS" signature="CloseSel()[pri:0, instance:Bank.Bank1@6bf551]" name="CloseSel" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:59Z" finished-at="2016-04-17T00:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseSel -->
      </class> <!-- Bank.Bank1 -->
      <class name="Bank.Bank2">
        <test-method status="SKIP" signature="xyz()[pri:0, instance:Bank.Bank2@1b277f0]" name="xyz" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:59Z" finished-at="2016-04-17T00:14:59Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test 
	at Bank.Bank2.xyz(Bank2.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method status="SKIP" signature="ApplyPL()[pri:0, instance:Bank.Bank2@1b277f0]" name="ApplyPL" duration-ms="0" started-at="2016-04-17T00:14:59Z" finished-at="2016-04-17T00:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplyPL -->
        <test-method status="SKIP" signature="xyz()[pri:0, instance:Bank.Bank2@1b277f0]" name="xyz" is-config="true" duration-ms="0" started-at="2016-04-17T00:14:59Z" finished-at="2016-04-17T00:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method status="SKIP" signature="ApplyHL()[pri:0, instance:Bank.Bank2@1b277f0]" name="ApplyHL" duration-ms="0" started-at="2016-04-17T00:14:59Z" finished-at="2016-04-17T00:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplyHL -->
      </class> <!-- Bank.Bank2 -->
      <class name="Bank.Bank3">
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String)[pri:0, instance:Bank.Bank3@d57bcb]" name="login" duration-ms="0" started-at="2016-04-17T00:14:59Z" data-provider="uidpwd" finished-at="2016-04-17T00:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String)[pri:0, instance:Bank.Bank3@d57bcb]" name="login" duration-ms="0" started-at="2016-04-17T00:14:59Z" data-provider="uidpwd" finished-at="2016-04-17T00:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="product(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Bank.Bank3@d57bcb]" name="product" duration-ms="0" started-at="2016-04-17T00:14:59Z" data-provider="product" finished-at="2016-04-17T00:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[data21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[data22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[data23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- product -->
        <test-method status="PASS" signature="product(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Bank.Bank3@d57bcb]" name="product" duration-ms="0" started-at="2016-04-17T00:14:59Z" data-provider="product" finished-at="2016-04-17T00:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[data11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[data12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[data13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- product -->
      </class> <!-- Bank.Bank3 -->
    </test> <!-- Mod2 -->
  </suite> <!-- My Test Suite -->
</testng-results>
